openapi: 3.0.0
info:
  title: Jobs API
  contact: {}
  version: '1.0'
servers:
- url: https://jobs-api-107.herokuapp.com/api/v1
  variables: {}
paths:
  /auth/register:
    post:
      tags:
      - Auth
      summary: Register
      description: Register a new user
      operationId: Register
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
            example:
              username: oggy
              email: oggy@gmail.com
              password: hello
        required: true
      responses:
        '200':
          description: 'Registered user successfully'
          headers: {}
        '400':
          description: 'Bad request: missing values or duplicate email'
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
      - Auth
      summary: Login
      description: login
      operationId: Login
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
            example:
              username: oggy
              password: hello
        required: true
      responses:
        '200':
          description: 'Login success'
          headers: {}
        '400':
          description: 'Bad request: missing values in request body'
        '401':
          description: 'Unauthorized'
      deprecated: false
      security: []
  /jobs:
    post:
      tags:
      - Jobs
      summary: Create job
      description: Create a new job
      operationId: Createjob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatejobRequest'
            example:
              company: Postman
              position: Frontend
        required: true
      responses:
        '200':
          description: 'Job created successfully'
          headers: {}
        '400':
          description: 'Bad request: missing values in request body'
        '401':
          description: 'Unauthorized'
      deprecated: false
      security:
      - bearer: []
    get:
      tags:
      - Jobs
      summary: Get all jobs
      description: Get all jobs created by user
      operationId: Getalljobs
      parameters: []
      responses:
        '200':
          description: 'Successfully fetched all jobs'
          headers: {}
        '401':
          description: 'Unauthorized'
      deprecated: false
      security:
      - bearer: []
  /jobs/{Job Id}:
    parameters:
      - in: path
        name: Job Id
        schema:
          type: string
        required: true
    get:
      tags:
      - Jobs
      summary: Get single job
      description: Get single job created by user
      operationId: Getsinglejob
      parameters: []
      responses:
        '200':
          description: 'Successfully fetched specified job'
          headers: {}
        '400':
          description: 'Bad request: invalid job id'
        '401':
          description: 'Unauthorized'
      deprecated: false
      security:
      - bearer: []
    patch:
      tags:
      - Jobs
      summary: Update job
      description: Update a specific job
      operationId: Updatejob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatejobRequest'
            example:
              position: Lead Frontend
              status: interview
        required: true
      responses:
        '200':
          description: 'Successfully updated specific job'
          headers: {}
        '400':
          description: 'Bad request: missing values or invalid job id'
        '401':
          description: 'Unauthorized'
      deprecated: false
      security:
      - bearer: []
    delete:
      tags:
      - Jobs
      summary: Delete job
      description: Delete a specific job
      operationId: Deletejob
      parameters: []
      responses:
        '200':
          description: 'Successfully deleted specified job'
          headers: {}
        '400':
          description: 'Bad request: invalid job id'
        '401':
          description: 'Unauthorized'
      deprecated: false
      security:
      - bearer: []
components:
  schemas:
    RegisterRequest:
      title: RegisterRequest
      required:
      - username
      - email
      - password
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        username: oggy
        email: oggy@gmail.com
        password: hello
    LoginRequest:
      title: LoginRequest
      required:
      - username
      - password
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      example:
        username: oggy
        password: hello
    CreatejobRequest:
      title: CreatejobRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
        status:
          type: string
          enum: [interview, declined, pending]
          default: pending
      example:
        company: Postman
        position: Frontend
    UpdatejobRequest:
      title: UpdatejobRequest
      type: object
      properties:
        company:
          type: string
        position:
          type: string
        status:
          type: string
          enum: [interview, declined, pending]
      example:
        position: patched
        status: interview
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
- name: Auth
  description: ''
- name: Jobs
  description: ''